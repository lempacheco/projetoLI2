        -:    0:Source:src/queueFunc.c
        -:    0:Graph:coverage/queueFunc.gcno
        -:    0:Data:coverage/queueFunc.gcda
        -:    0:Runs:1
        -:    1:#include "../include/queueFunc.h"
        -:    2:
        7:    3:void initQueue (Queue *dq){
        7:    4:    int tamanhoInicial = 10; 
        7:    5:    dq->inicio = 0;
        7:    6:    dq->cap = tamanhoInicial; 
        7:    7:    dq->tam = 0; 
        7:    8:    dq->valores = malloc(tamanhoInicial*sizeof(Pos)); 
        7:    9:}
        -:   10:
      142:   11:int isEmptyQ (Queue* dq){
      142:   12:    if(dq->tam == 0) return 1; 
      139:   13:    else return 0; 
        -:   14:}
        -:   15:
      142:   16:void enqueue(Queue *q, Pos p) {
      142:   17:    if (q->tam == q->cap) {
        3:   18:        int novaCap = q->cap * 2;
        3:   19:        Pos *novosValores = malloc(sizeof(Pos) * novaCap);
        -:   20:
       24:   21:        for (int i = 0; i < q->tam; i++) {
       21:   22:            int idx = q->inicio + i;
       21:   23:            if (idx >= q->cap) idx -= q->cap;
       21:   24:            novosValores[i] = q->valores[idx];
        -:   25:        }
        -:   26:
        3:   27:        free(q->valores);
        3:   28:        q->valores = novosValores;
        3:   29:        q->cap = novaCap;
        3:   30:        q->inicio = 0;
        -:   31:    }
        -:   32:
      142:   33:    int fim = q->inicio + q->tam;
      142:   34:    if (fim >= q->cap) fim -= q->cap;
        -:   35:
      142:   36:    q->valores[fim] = p;
      142:   37:    q->tam++;
      142:   38:}
        -:   39:
        -:   40:
      140:   41:int dequeue(Queue *q, Pos *x) {
      140:   42:    if (q->tam == 0) return 1; // Fila vazia
        -:   43:
      139:   44:    *x = q->valores[q->inicio];
        -:   45:
      139:   46:    q->inicio++;
      139:   47:    if (q->inicio == q->cap) q->inicio = 0;
        -:   48:
      139:   49:    q->tam--;
      139:   50:    return 0;
        -:   51:}
        -:   52:
       14:   53:void liberaQueue (Queue *q){
       14:   54:    free(q->valores); 
       14:   55:    q->cap=0; 
       14:   56:    q->inicio=0; 
       14:   57:    q->tam=0; 
       14:   58:}
