        -:    0:Source:src/gravaFicheiro.c
        -:    0:Graph:coverage/gravaFicheiro.gcno
        -:    0:Data:coverage/gravaFicheiro.gcda
        -:    0:Runs:1
        -:    1:#include "../include/gravaFicheiro.h"
        -:    2:
        -:    3:/* Guarda a matriz fornecida num ficheiro com nome especificado,
        -:    4:   criando o caminho como "lib/<nome>". O ficheiro é escrito no seguinte formato:
        -:    5:   
        -:    6:   - Primeira linha: <L> <C> (número de linhas e colunas, como caracteres).
        -:    7:   - Linhas seguintes: conteúdo da matriz, linha a linha. 
        -:    8:*/
        -:    9:
        5:   10:int gravaFicheiro(char* nomeM, char* nomeS, Matriz* m, StackMat* s){
        5:   11:    FILE* fpM; 
        5:   12:    FILE* fpS;
        5:   13:    int r=0;
        -:   14:
        -:   15:    //matriz
        5:   16:    fpM = fopen(nomeM, "w");
        -:   17:
        5:   18:    if (gravaMatriz(m, fpM)) return 1;
        5:   19:    fclose(fpM);
        -:   20:
        -:   21:    //stackMat
        5:   22:    fpS = fopen(nomeS, "w");
        -:   23:
        5:   24:    if (gravaStackMat(s,fpS)) return 1;
        5:   25:    fclose(fpS);
        -:   26:    
        5:   27:    return r; 
        -:   28:}
        -:   29:
       12:   30:int gravaMatriz(Matriz* m, FILE* fp){
       12:   31:    int i, j;
        -:   32:
       12:   33:    if (fprintf(fp, "%d %d\n", m->L, m->C) < 0) return 1; 
        -:   34:
       80:   35:    for (i=0; i<m->L; i++){
      480:   36:        for (j=0; j<m->C; j++){
      412:   37:            if (fputc(m->matriz[i][j], fp) == EOF) return 1;
        -:   38:        }
       68:   39:        if (i != m->L-1)
       56:   40:            if (fputc('\n', fp) == EOF) return 1;
        -:   41:    }
        -:   42:
        -:   43:    return 0;
        -:   44:}
        -:   45:
        6:   46:int gravaStackMat(StackMat* s, FILE* fp){
        6:   47:    int i;
        -:   48:
        -:   49:    //s->cabeca e s->tam
        6:   50:    if (fprintf (fp, "%d %d\n", s->cabeca, s->tam) < 0) return 1;
        -:   51:
       12:   52:    for (i=0; i <= s->cabeca; i++){
        -:   53:        //comando
        6:   54:        if (fputc(s->comandos[i], fp) == EOF) return 1;
        -:   55:
        -:   56:        //matriz
        6:   57:        if (fputc('\n', fp) == EOF) return 1;
        6:   58:        if (gravaMatriz(&s->dados[i], fp)) return 1;
        -:   59:
        6:   60:        if (fputc('\n', fp) == EOF) return 1;
        -:   61:    }
        -:   62:
        -:   63:    return 0;
        -:   64:} 
